services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: 'bitnami/kafka:latest'
    container_name: 'kafka'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_LISTENERS=PLAINTEXT://:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://127.0.0.1:9092
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper
  
  # python:
  #   image: 'python:3.11.0b4-alpine3.16'
  #   container_name: python
  #   ports:
  #     - '80:80' 

  db:
    image: postgres:14.1-alpine
    container_name: dbpg
    restart: always
    environment:
      - "POSTGRES_USER=postgres"
      - "POSTGRES_PASSWORD=postgres"
    ports:
      - '5432:5432'
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/docker_postgres_init.sql
      - ./pgdata:/var/lib/postgres/data

  users:
    build: ./users
    container_name: users_c1
    ports:
      - '3333:3333'
    depends_on:
      - db
      - kafka
      # - python
    environment:
      PORT: 3333
      PG_HOST: db
      PG_PORT: 5432
      PG_USER: postgres
      PG_PASSWORD: postgres
      PG_DB: userdb
    
    links:
      - db

    volumes:
      - ./users:/app
      - /app/node_modules

  notes:
    build: ./notes
    container_name: notes_c1
    ports:
      - '5000:5000'
    depends_on:
      - db
    environment:
      PORT: 5000
      PG_HOST: db
      PG_PORT: 5432
      PG_USER: postgres
      PG_PASSWORD: postgres
      PG_DB: notedb
    
    links:
      - db

    volumes:
      - ./notes:/app
      - /app/node_modules

  emails:
    build: ./emails
    container_name: emails_c1
    ports:
      - '6666:6666'
    depends_on:
      - kafka
    environment:
      USER_EMAIL: ${USER_EMAIL}
      USER_PASSWORD: ${USER_PASSWORD}
    links:
      - users
    volumes:
      - ./emails:/app
      - /app/node_modules

  api_gateway:
    build: ./api_gateway
    container_name: api_gateway_c1
    ports:
      - '4444:4444'
    environment:
      PORT: 4444

    links:
      - users
      - notes

    volumes:
      - ./api_gateway:/app
      - /app/node_modules
